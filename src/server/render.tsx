/**
 * Server Side Rendering
 */
import {APIGatewayEvent} from 'aws-lambda';
import * as React        from 'react';
import {renderToString}  from 'react-dom/server';
import {StaticRouter}    from 'react-router-dom/server';

import App           from '../app';
import ConfigContext from '../components/ConfigContext';
import config        from './config';
import html          from './html';
import {Stats}       from './types';

import {store}    from '../store';
import {Provider} from 'react-redux';

/**
 * Server-side rendering
 */
export default async function render(_event: APIGatewayEvent): Promise<string> {
    // We need to build the request location string manually from the event path and the query string parameters
    let location: string = _event.path;
    if (_event.queryStringParameters) {
        const searchParams = new URLSearchParams();
        Object.entries(_event.queryStringParameters).forEach(([key, value]) => searchParams.append(key, value ?? ''));
        location += `?${searchParams.toString()}`;
    }

    // The stats are generated by the Webpack Stats Plugin (`webpack-stats-plugin`)
    const stats   = (await import('../../dist/stats.json')) as unknown as Stats;
    const content = renderToString(
        <ConfigContext.Provider value={config}>
            <StaticRouter basename={config.app.URL} location={location}>
                <Provider store={store}>
                    <App/>
                </Provider>
            </StaticRouter>
        </ConfigContext.Provider>
    );

    return html({stats, content, config});
}
